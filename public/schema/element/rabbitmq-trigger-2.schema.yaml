$id: >-
  http://qubership.org/schemas/product/qip/element/rabbitmq-trigger-2.schema.yaml
$schema: http://json-schema.org/draft-07/schema
type: object
allOf:
  - type: object
    title: Common Entity Properties
    properties:
      id:
        type: string
        title: Identifier
      name:
        type: string
        title: Name
    required:
      - id
      - name
  - type: object
    title: Entity with description
    properties:
      description:
        type: string
        title: Description
title: RabbitMQ Trigger
properties:
  type:
    type: string
    const: rabbitmq-trigger-2
  properties:
    type: object
    allOf:
      - $id: >-
          http://qubership.org/schemas/product/qip/element/properties/rabbitmq-connection-parameters.schema.yaml
        $schema: http://json-schema.org/draft-07/schema
        type: object
        title: RabbitMQ connection parameters
        properties:
          connectionSourceType:
            title: Connection source type
            enum:
              - maas
              - manual
          exchange:
            type: string
            title: Exchange Name
          routingKey:
            type: string
            title: Routing Key
        if:
          properties:
            connectionSourceType:
              const: maas
        then:
          properties:
            vhostClassifierName:
              type: string
              title: Vhost Classifier Name
            maasClassifierNamespace:
              type: string
              title: Topic Classifier Namespace
              description: >
                MaaS topic classifier namespace. By default used current
                namespace.
          required:
            - vhostClassifierName
        else:
          properties:
            addresses:
              type: string
              title: Addresses
            username:
              type: string
              title: Username
            password:
              type: string
              title: Password
              description: >
                For security purposes, use reference to secured variables when
                entering passwords.
          required:
            - addresses
        required:
          - connectionSourceType
          - exchange
      - $id: >-
          http://qubership.org/schemas/product/qip/element/properties/idempotency.schema.yaml
        $schema: http://json-schema.org/draft-07/schema
        type: object
        title: Idempotency properties
        properties:
          idempotency:
            type: object
            allOf:
              - &ref_1
                type: object
                properties:
                  enabled:
                    type: boolean
                    title: Enable idempotency
                    default: false
                  keyExpiry:
                    allOf:
                      - &ref_0
                        oneOf:
                          - type: integer
                            minimum: 0
                          - type: string
                            pattern: ^[0-9]+$
                          - type: string
                            pattern: ^#\{[a-zA-Z0-9:._-]+\}$
                    title: Key expiration time (seconds)
                    default: 600
                  contextExpression:
                    type: string
                    title: Context expression
                  keyExpression:
                    type: string
                    title: Key expression
                  actionOnDuplicate:
                    enum:
                      - ignore
                      - throw-exception
                      - execute-subchain
                    title: Action on duplicate message
                    default: ignore
                if:
                  properties:
                    enabled:
                      const: true
                then:
                  required:
                    - contextExpression
                    - keyExpression
            if:
              properties:
                enabled:
                  const: true
                actionOnDuplicate:
                  const: execute-subchain
              required:
                - enabled
                - actionOnDuplicate
            then:
              allOf:
                - &ref_2
                  type: object
                  properties:
                    chainTriggerParameters:
                      title: Subchain execution parameters
                      type: object
                      additionalProperties: false
                      properties: &ref_3
                        triggerElementId:
                          type: string
                          title: Chain trigger
                        chainCallTimeout:
                          allOf:
                            - *ref_0
                          title: Timeout (ms)
                          default: 30000
                      required: &ref_4
                        - triggerElementId
                  required:
                    - chainTriggerParameters
        definitions:
          CommonIdempotencyProperties: *ref_1
          ExecuteSubchainProperties: *ref_2
          ChainTriggerParameters:
            type: object
            title: Subchain execution parameters
            additionalProperties: false
            properties: *ref_3
            required: *ref_4
    properties:
      queues:
        type: string
        title: Queue(s) Name
        description: |
          The queue(s) to use for consuming messages (separated by comma).
      acknowledgeMode: &ref_6
        enum:
          - NONE
          - MANUAL
          - AUTO
        default: AUTO
        title: Acknowledge Mode
        description: >
          NONE - no acknowledgment will be sent. MANUAL - immediately send an
          acknowledgment (normal or negative) when message is taken. AUTO - send
          an acknowledgment (normal or negative) after the end of the chain.
      exchangeType: &ref_7
        enum: &ref_5
          - direct
          - fanout
          - headers
          - topic
        default: direct
        title: Exchange type
      deadLetterExchange:
        type: string
        title: Dead Letter Exchange
      deadLetterExchangeType:
        enum: *ref_5
        default: direct
        title: Exchange type
      deadLetterQueue:
        type: string
        title: Dead Letter Queue
      deadLetterRoutingKey:
        type: string
        title: Dead Letter Routing Key
      sslProtocol:
        title: SSL
        type: string
      vhost:
        title: Vhost
        type: string
    required:
      - queues
definitions:
  AcknowledgeMode: *ref_6
  ExchangeType: *ref_7
