---

  # This GitHub Actions workflow can be triggered in two ways:
  # 1. Automatically on push to any branch (runs in dry-run mode for safety)
  # 2. Manually via workflow_dispatch with configurable parameters
  #
  # The workflow delegates the actual NPM publishing process to the re-npm-publish.yml workflow
  # from the qubership-workflow-hub repository, which performs the following tasks:
  # 1. Checks out the repository.
  # 2. Sets up Node.js environment.
  # 3. Installs dependencies.
  # 4. Detects if the project is a Lerna monorepo.
  # 5. Updates dependencies if required.
  # 6. Updates package version in package.json or lerna.json.
  # 7. Builds the project.
  # 8. Runs tests.
  # 9. Commits and pushes changes.
  # 10. Publishes the package to NPM registry.

  # To make it work for your project, you need to adjust the package.json and add configuration file for GitHub release.
  # Please find detailed instructions:
  # https://github.com/netcracker/qubership-workflow-hub?tab=readme-ov-file#npm-project-release-workflow
  #
  # Note: When triggered by push, the workflow automatically runs in dry-run mode to prevent
  # accidental publishing. Use workflow_dispatch for actual releases.

  name: Publish NPM package

  run-name: NPM Package${{ (github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && inputs.dry-run)) && ' - Test' || ' - Publish' }}${{ (github.event_name == 'workflow_dispatch' && !inputs.dry-run && inputs.version) && format(' {0}', inputs.version) || '' }}

  on:
    push:
      branches:
        - '**'
    workflow_dispatch:
      inputs:
        version:
          description: 'Release version for NPM (e.g., 1.0.0)'
          required: false
          type: string
        scope:
          description: 'NPM scope for the package'
          required: false
          type: string
          default: '@netcracker'
        node-version:
          required: false
          type: string
          default: "22.x"
        registry-url:
          required: false
          type: string
          default: "https://npm.pkg.github.com"
        update-nc-dependency:
          required: false
          type: boolean
          default: false
        dry-run:
          description: 'Run in dry-run mode (no actual publishing)'
          required: false
          type: boolean
          default: false
        npm-dist-tag:
          description: 'NPM distribution tag'
          required: false
          type: string
          default: 'latest'

  permissions:
    contents: write
    packages: write

  jobs:
    prepare-version:
      runs-on: ubuntu-latest
      outputs:
        publish_version: ${{ steps.set_version.outputs.publish_version }}
      steps:
        - uses: actions/checkout@v4

        - name: Get package version
          id: get_version
          run: echo "package_version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

        - name: Set publish version
          id: set_version
          run: |
            VERSION=${{ steps.get_version.outputs.package_version }}
            if [[ "$VERSION" == *"-dev" ]]; then
              TIMESTAMP=$(date +'%Y%m%d%H%M%S')
              NEW_VERSION="${VERSION}.${TIMESTAMP}"
              echo "Final publish version: $NEW_VERSION"
              echo "publish_version=$NEW_VERSION" >> $GITHUB_OUTPUT
            else
              echo "Final publish version: $VERSION"
              echo "publish_version=$VERSION" >> $GITHUB_OUTPUT
            fi

#    npm-publish:
#      uses: Netcracker/qubership-workflow-hub/.github/workflows/re-npm-publish.yml@main
#      with:
#        version: ${{ github.event_name == 'workflow_dispatch' && inputs.version || '' }}
#        scope: ${{ github.event_name == 'workflow_dispatch' && inputs.scope || '@netcracker' }}
#        node-version: ${{ github.event_name == 'workflow_dispatch' && inputs.node-version || '22.x' }}
#        registry-url: ${{ github.event_name == 'workflow_dispatch' && inputs.registry-url || 'https://npm.pkg.github.com' }}
#        update-nc-dependency: ${{ github.event_name == 'workflow_dispatch' && inputs.update-nc-dependency || false }}
#        dry-run: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && inputs.dry-run) }}
#        dist-tag: ${{ github.event_name == 'workflow_dispatch' && inputs.npm-dist-tag || 'latest' }}
#        ref: ${{ github.ref_name }}
#      secrets: inherit

